#Программа определяет наименьшее расстояние, на которое необходимо подвинуть
#вершину треугольника, чтобы он стал равнобедренным
#Автор - Светличная Алина, группа - ИУ7 - 13Б 

xA, yA = map(int, input('Введите координаты вершины A треугольника: ')\
. split())
xB, yB = map(int, input('Введите координаты вершины B треугольника: ')\
. split())
xC, yC = map(int, input('Введите координаты вершины C треугольника: ')\
. split())

c =((xA - xB)**2 + (yA - yB)**2)**(1/2)#Поиск длины стороны AB
b =((xA - xC)**2 + (yA - yC)**2)**(1/2)#Поиск длины стороны AC
a =((xC - xB)**2 + (yC - yB)**2)**(1/2)#Поиск длины стороны BC

#Проверка корректности данных
from math import sqrt
S = sqrt(((a+b+c)/2)*((a+b+c)/2 - a)*((a+b+c)/2 - b)*((a+b+c)/2 - c))
if S == 0:
    print('Введены некорректные данные, точки не выстраивают треугольник')
    xA, yA = map(int, input('Введите координаты вершины A треугольника: ')\
. split())
    xB, yB = map(int, input('Введите координаты вершины B треугольника: ')\
. split())
    xC, yC = map(int, input('Введите координаты вершины C треугольника: ')\
. split())

if (a==b) or (a==c) or (b==c):
    print('Треугольник равнобедренный')
    
else:
    #Поиск расстояний, на которые необходимо сдвинуть вершины, чтобы
    #треугольник стал равнобедренным 
    BH = 2*S / b
    CH1 = (a**2 - BH**2)**(1/2)
    roB = abs(CH1 - b/2)

    AH = 2*S / a
    BH1 = (c**2 - AH**2)**(1/2)
    roA = abs(BH1 - a/2)

    CH = 2*S / c
    AH1 = (b**2 - CH**2)**(1/2)
    roC = abs(AH1 - c/2)
    
    #Поиск минимального расстояния и соответствующей вершины 
    if (roA <= roB) and (roA <= roC):
        print('Начальные координаты искомой вершины: A( ', xA, ';', yA, ')')
        print('Расстояние, на которое необходимо сдвинуть эту вершину: {:.7g} '\
.format(roA))

        xs = (xC + xB)/2
        ys = (yC + yB)/2
        X = xC - xB
        Y = yC - yB
        delt = roA / a
        X1 = delt * X
        Y1 = delt * Y
        x0 = X1 + xA
        y0 = Y1 + yA
        if ((x0 - xs)**2 + (y0 -ys)**2)**(1/2) != AH:
            x0 = -X1 + xA
            y0 = -Y1 + yA
        print('Новые координаты искомой вершины: A( {:.3g}'.format(x0),\
'; {:.3g}'.format(y0), ')')

        
    elif (roB <= roC) and (roB < roA):
        print('Начальные координаты искомой вершины: B(',xB, ';',yB, ')')
        print('Расстояние, на которое необходимо сдвинуть эту вершину: {:.7g} '\
.format(roB))
        
        xs = (xC + xA)/2
        ys = (yC + yA)/2
        X = xC - xA
        Y = yC - yA
        delt = roB / b
        X1 = delt * X
        Y1 = delt * Y
        x0 = X1 + xB
        y0 = Y1 + yB
        if ((x0 - xs)**2 + (y0 -ys)**2)**(1/2) != BH:
            x0 = -X1 + xB
            y0 = -Y1 + yB
        print('Новые координаты искомой вершины: B( {:.3g}'.format(x0),\
'; {:.3g}'.format(y0), ')')
        
    elif (roC < roA) and (roC < roB):
        print('Начальные координаты искомой вершины: C( ', xC, ';', yC, ')')
        print('Расстояние, на которое необходимо сдвинуть эту вершину: {:.7g} '\
.format(roC))

        xs = (xB + xA)/2
        ys = (yB + yA)/2
        X = xB - xA
        Y = yB - yA
        delt = roC / c
        X1 = delt * X
        Y1 = delt * Y
        x0 = X1 + xC
        y0 = Y1 + yC
        if ((x0 - xs)**2 + (y0 -ys)**2)**(1/2) != CH:
            x0 = -X1 + xC
            y0 = -Y1 + yC
        print('Новые координаты искомой вершины: C( {:.3g}'.format(x0),\
'; {:.3g}'.format(y0), ')')
