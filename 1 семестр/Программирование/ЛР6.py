#Программа работает с определенными функциями меню
#Автор - Светличная Алина, ИУ7 - 13Б

spisok = []
menu = None

while menu != '0':

    #Объявление функций меню
    print('1 - Инициализация списка первыми N элементами заданного ряда',\
          '2 - Добавить элемент в произвольное место списка',\
          '3 - Удалить произвольный элемент из списка',\
          '4 - Очистить список',\
          '5 - Найти значение K-го экстремума в списке, если он является \
списком чисел',\
          '6 - Найти наиболее длинную последовательность чисел по варианту',\
          '7 - Найти последовательность, включающую в себя наибольшее \
количество элементов-строк по варианту',\
          '0 - Выход', sep = '\n')
    
    menu = input()

    #Проверка наличия элементов в обрабатываемом списке
    while spisok == [] and menu != '1':
        print('Обрабатываемый спиоск пуст, вызовите команду 1, чтобы его \
заполнить')
        menu = input()

    if menu == '0':
        print('Выход')



    elif menu == '1':
        N = int(input('Введите число N - количество элементов списка из \
заданного ряда: '))

        #Проверка корректности данных, количество элементов списка не может быть
        #отрицательным или нулевым числом
        while N <= 0:
            print('Введенное число N  не является положительным')
            N = int(input('Введите число N - количество элементов списка из \
заданного ряда: '))

        x = float(input('Введите число x: '))
            
        #Инициализвция элементов списка согласно условию меню    
        for i in range(N):
            x1 = (-1)**i + (i + 1) * x ** i
            spisok.append(x1)




    elif menu == '2':
        k = int(input('Введите число k - индекс добавления элемента \
в список: '))

        #Проверка корректности данных, индекс добавления элемента не может быть
        #меньше 1 или  превышать количество элементов списка больше, чем на 1
        while k < 1 or k > N + 1:
            print('Введено некорректное значение индекса, элемент не может быть \
добавлен в спиок')
            k = int(input('Введите число k - индекс добавления элемента \
в список: '))

        x = input('Введите значение элемента, которое хотите добавить \
в список: ')
        spisok.insert(k-1, x) #Добавление заданного элемента на заданное место
        N += 1




    elif menu == '3':
        k = int(input('Введите число k - индекс удаления элемента из списка: '))

        #Проверка корректности данных, индекс удвления элемента не может быть
        #меньше 1 или  превышать количество элементов списка больше, чем на 1
        while k < 1 or k > N + 1:
            print('Введено некорректное значение индекса, элемент не может \
быть удален из списка')
            k = int(input('Введите число k - индекс удаления элемента \
из списка: '))

        spisok.pop(k-1) #Удаление элемента с заданного места
        N -= 1


    elif menu == '4':
        spisok.clear()#Очищение списка


    elif menu == '5':

        #Проверка всех элементов списка по признакам вещественных чисел
        for j in range(N):

            x = spisok[j]

            x = list(str(spisok[j]))
            d = len(x)
            m = p = t = 0

            #Проверка числа на экспоненциальную запись
            for s in range(d):
                if x[s] == 'e':
                    form1 = 'exp'
                    k = s
                    break
                else: form1 = 'float, int'

            #Если в элементе списка встречен символ экспоненты, то часть,
            #стоящая до экспоненты может являться знаковым целым
            #или вещественным с плавающей точкой, а часть, стоящая после
            #экспоненты, должна быть только целыи знаковым числом
            if form1 == 'exp':

                #Проверка первой части экспоненциального числа
                for s in range(k):

                    if (x[0] == '-' and m == 0) or (x[0] == '+' and p == 0)\
or '0' <= x[s] <= '9' or (x[s] == '.' and t == 0): 

                        if x[s] == '.':
                            t += 1

                        if x[s] == '-':
                            m += 1

                        if x[s] == '+':
                            p += 1

                        isok = True

                    else:
                        isok = False
                        break

                #Проверка второй части экспоненциального числа
                for s in range(k+1, N):

                    if (x[k+1] == '-' and m == 0) or (x[k+1] == '+'\
and p == 0) or '0' <= x[s] <= '9': 

                        if x[si] == '-':
                                    m += 1

                        if x[s] == '+':
                                p += 1


                        isok = True

                    else:
                        isok = False
                        break
                    


            #Случай представления числа в виде целого либо вещественного
            #с точкой
            if form1 == 'float, int':

                for s in range(d):
                        
                    if (x[0] == '-' and m == 0) or (x[0] == '+' and p == 0)\
or '0' <= x[s] <= '9' or (x[s] == '.' and t == 0): 
                        if x[s] == '.':
                            t += 1

                        if x[s] == '-':
                            m += 1

                        if x[s] == '+':
                            p += 1

                        isok = True

                    else:
                        isok = False
                        break



        if isok: 
            k = int(input('Введите число k - номер искомого экстремума: '))
            
            while k <= 0:
                print('Введенное число k  не является положительным')
                k = int(input('Введите число k - номер искомого экстремума: '))

            #Рассмотрение первых элементов списка на монотонность
            j = u = 0
            while u == 0 and j < N:
                u = float(spisok[j]) - float(spisok[j+1])
                j +=1

            if j == N:
                print('Все элементы числовой последовательности равны')

            else:

                #Поиск экстремумов числовой последовательности соглано условию
                #меню
                k1 = s = 0 
                while k1 < k and s < (N - 2) : 
                    while ((float(spisok[s]) - float(spisok[s+1]) <= 0 and u < 0)\
or (float(spisok[s]) - float(spisok[s+1]) >= 0 and u > 0))  and s <(N - 2) :
                        s += 1
                    ext = spisok[s]
                    u = u * (-1)
                    k1 += 1

            if s == N - 2 and ext != spisok[s-1]:
                print('Экстремума с заданным номером не существует')
            else: print(ext)
                                
            
               
        else: print('Не все элементы списка являются числами')


    elif menu == '6':

        k = 0
        max1 = 0
        isok = [0]*N
        
        for i in range(N):

            x = list(str(spisok[i]))
            isok1 = isok2 = False

            #Рассмотрение каждого символа элемента списка, проверка явления
            #его цифрой
            for j in range(len(x)):
                if '0' <= x[j] <= '9' or x[j] == '-' or x[j] == '.' :
                    isok2 = True
                else:
                    isok2 = False
                    break
                
            isok[i]= isok2
                #Рассмотрение тех элементов списка, которые являются целыми числами

        for i in range(N):

            if isok[i]:

                #Проверка простых чисел
                for j in range(2, (int(spisok[i])-1)):
                    if abs(int(spisok[i])) % j == 0:
                        isok1 = True
                        break

                if (not(isok1) and int(spisok[i]) < 0) and (k == 0 or \
    int(spisok[i]) < int(spisok[i-1])):
                    k += 1
                    el = i
                else: k = 0

                #Поиск наибольшей длины последовательности
                if k > max1:
                    max1 = k
                    m = el
            else: k = 0

        if max1 == 0:
            print('Такой последовательности в заданном списке нет')
        else:
            print('В результате выполненной операции получился список: ', \
end = '')
            for i in range(m - max1 + 1, m + 1):
                print(spisok[i], end = ' ')
            print()

    elif menu == '7':
        glas = ['e', 'y', 'u', 'i', 'o', 'a'] #Список гласных букв
        max1 = 0
        k = 0
        for i in range(N):

            x = list(str(spisok[i]))

            #Проверка каждого символа элементов на явление гласной буквой
            for j in range(len(x)):

                if x[j] in glas:
                    isok = 0
                else:
                    isok = 1
                    break
                               
            if isok != 1:
                k += 1
                el = i
            else: k = 0

            #Поиск наибольшей длины последовательности
            if k > max1:
                max1 = k
                m = el
            
        if max1 == 0:
            print('Такой последовательности в заданном списке нет')
        else:
            print('В результате выполненной операции получился список: ', \
end = '')
            for i in range(m - max1 + 1, m + 1):
                print(spisok[i], end = ' ')
            print()
                    
    
    #Вывод получившегося списка в результате некоторых операций меню, в случае
    #если происходила работа со всем списком
    if menu == '1':
        print('В результате выполненной операции получился список: ', end = '')
        for j in range(N):
            print('{:7.5g}'.format(spisok[j]), end = ' ')
        print()
    if '2' <= menu < '4':
        print('В результате выполненной операции получился список: ', end = '')
        for j in range(N):
            print('{:10s}'.format(str(spisok[j])), end = ' ')
        print()
            


        
