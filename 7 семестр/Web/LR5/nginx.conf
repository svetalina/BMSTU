worker_processes  auto;

error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {

	upstream main_backend { 
        server localhost:5000;
    }
		
	upstream mirror_backend { 
        server localhost:5000;
    }

	upstream backend {
        server localhost:5001 weight=2;
        server localhost:5002 weight=1;
        server localhost:5003 weight=1;
    }
	
	map $request_method $upstream_location { 
		GET     backend;
		default main_backend;
	}
	
	more_set_headers "Server: Books";
	
	gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_types
        text/plain
		text/css
		image/jpeg
        application/javascript
        application/json;
	
	proxy_cache_path C:/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

	server {
		
		proxy_cache my_cache;
		proxy_cache_valid 200 301 302 10m;
		proxy_cache_valid 404 1m;
		
		location /api/v1/ {
			proxy_no_cache 1;
			
			
			rewrite ^/api/v1/(.*)$ /$1 break;
			proxy_pass http://$upstream_location;
		}
		
		location /mirror/api/v1/ {
			proxy_no_cache 1;
			
			proxy_pass http://mirror_backend/;
		}
		
		location = /test {
			return 301 $scheme://$http_host/;
		}
		
		location = /apache {
			return 301 $scheme://$http_host/documentation/apache.md;
		}
		
		location = /documentation {
			return 301 $scheme://$http_host/documentation/readme.md;
		}
			location ~* \.md {

				error_page 418 = /__md_file;

				add_header 'Vary' 'Accept';

				if (!-f $request_filename) {
					break;
				}

				if ($http_accept !~* "text/markdown") {
					return 418;
				}
			}
		
		
			location = /__md_file {
				internal;
				allow all;

				add_header 'Vary' 'Accept';

				default_type text/html;
				alias C:/nginx/html/documentation/md-renderer.html;
			}

		location = /status {
			stub_status;
		}
		
		location = /admin {
            proxy_pass http://localhost:3000;
        }
		
			location /sqlpad {
				proxy_pass http://localhost:3000;
			}
			
			location /api/app {
				proxy_pass http://localhost:3000;
			}
	}
}